name: Quality Assurance

on:
  pull_request:
    branches:
      - master
      - feature-*
      - fix-*

  push:
    branches:
      - master
      - feature-*
      - fix-*
      - v*

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.4', '8.0']
        dependencies: ['--prefer-lowest', '']

    name: PHP ${{ matrix.php }} ${{ matrix.dependencies }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # https://github.com/actions/checkout

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 # https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php }}
          # https://github.com/shivammathur/setup-php/wiki/Php-extensions-loaded-on-ubuntu-20.04
          extensions: curl, dom, gd, iconv, intl, json, mbstring, mysqli, openssl, pdo_mysql, pdo_pgsql, pdo_sqlite, pgsql, readline, simplexml, sqlite3, tokenizer, xml, xmlreader, xmlwriter, zip
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Quality Assurance
        run: |
          composer update --no-progress ${{ matrix.dependecies }}
          composer prj:qa
